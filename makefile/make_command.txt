
1、make是个命令，是个可执行程序，用来解析Makefile文件的命令
   这个命令存放在/usr/bin/
2、makefile是个文件，这个文件中描述了我们程序的编译规则，在执行make命令时，
   make命令会在当前目录下找makefile文件，根据makefile文件里的规则编译程序
   注意：Makefile规则文件是程序员根据自己的程序，编写的编译规则
3、采用Makefile的好处
   1)简化编译程序的时候输入的命令，编译的时候只需要敲make命令即可
   2)可以节省编译时间，提高效率

1、GUN make是一种代码维护工具
2、make工具会根据makefile文件定义的规则和步骤，完成整个软件项目的代码维护工作。
3、一般用来简化编译工作，可以极大地提高软件开发的效率。
4、windows下一般由集成开发环境自动生成
5、linux下需要由我们按照其语法自己编写

make主要解决两个问题
1、大量代码的关系维护
   大项目中源代码比较多，手工维护、编译时间长而且编译命令复杂，难以记忆及维护
   把代码维护命令及编译命令写在maakefile文件中，然后再用make工具解析此文件自动执行
   相应命令，可实现代码的合理编译
2、减少重复编译时间
   在改动其中一个文件时，能判断哪些文件被修改过，可以只对该文件进行重新编译，
   然后充型链接所有的目标文件，节省编译时间

makefile语法规则
目标：依赖文件列表
<Tab>命令列表
  1、目标：
    通常是要产生的文件名称，目标可以是可执行文件或其它obj文件，也可以是一个动作的名称
  2、依赖文件：
    是用来输入从而产生目标的文件，一个目标通常有几个依赖文件（可以没有）
  3、命令：
    make执行的动作，一个规则可以含几个命令（可以没有）,
    有多个命令时，每个命令占一行

make命令格式
  make [-f file] [targets]
  1、[-f file]：
     make默认在工作目录中寻找名为GUNmakefile、makefile、Makefile的文件作为
     makefile输入文件，-f可以指定以上名字以外的文件作为makefile输入文件
  2、[targets]：
     若使用make命令时没用指定目标，则make工具默认会实现makefile文件内的第一个目标，
     然后退出，指定了make工具要实现的目标，目标可以是一个或多个(多个目标间用空格隔开)






