/*
 * author: inkXu
 * date:   2022.9.3
 *
 * 计算机网络
 */

  最早的计算机网络

  由美国创造的ARPA，但是最早的ARPA无法连接不同类型的计算机和不同类型的操作系统


  计算机网络中数据采用分组交换的方式

  通过标有地址的分组进行路由选择传送数据，使通信通道仅在传送期间被占用的一种交换方式分组的组成
  就是将一份数据分为多段，传给上一级后，等待线路没有使用时，就轮到你的这份数据了


  计算机网络中数据的交换方式

  交换方式--存储转发
  节点收到分组，先暂时存储下来，在检查其首部，按照首部中的目的地址，找到合适的节点转发出去
  特点：以分组作为传输单位，独立的选择转发路由，逐段占用，动态分配传输带宽


  计算机网络的世界语--TCP/IP(族)

  到现在为止，只要是能够通信的机器，能够上网的机器，一定用的就是tcp/ip协议族



  TCP/IP协议简介

  为了减少协议设计的复杂性，大多数网络模型均采用分层的方式来组织，每一层利用下一层提供的服务来为上一层提供服务，
  本层服务的实现细节对上层屏蔽


  分层结构

  为了能够实现不同类型的计算机和不同类型的操作心痛之间进行通信，引入了分层的概念
  最早的分层体系结构是OSI开放系统互联模型，是由国际化标准组织（ISO）指定的，由于OSI过于复杂，所以到现在为止也没
  有适用，而使用的是TCP/IP协议族
  OSI一共分为7层，TCP/IP协议族一共四层，虽然TCP/IP协议族层次少，但是却干了OSI7层所有任务

  应用层： 应用程序间沟通的层
           如：FTP   Telnet   HTTP等

  传输层：提供进程间的数据传送服务
          如：TCP   UDP等

  网络层：提供基本的数据封包传送功能
          最大可能的让每个数据报都能达到目的主机
          如：IP   ICMP等

  链路层：负责数据帧的发送和接收

            +----------------------------------------------------------+              应用程序
  应用层    |       FTP   Telnet                   TFTP    NFS         |     应用层 ------------- 应用层
            +---------\----/--------------------------\-----/----------+
            +----------\--/----------------------------\---/-----------+              进程到进程
  传输层    |          TCP ---------+      +----------- UDP            |     传输层 ------------- 传输层
            +------------------------\----/----------------------------+
            +-------------------------\--/-----------------------------+              主机到主机
  网络层    |          ICMP ---------- IP ------------ IGMP            |     网络层 ------------- 网络层
            +---------------------------|------------------------------+
            +---------------------------|------------------------------+              设备到设备
  链路层    |          ARP --------- 硬件接口 --------- RARP           |     链路层 ------------- 链路层
            +---------------------------|------------------------------+
                                        |
                                    媒介（介质）

  IP协议

  特指为实现在一个相互连接的网络系统上从源地址到目的地址传输数据包（互联网数据包）所提供必要功能的协议
  特点：
       不可靠：它不能保证IP数据包能成功地到达它的目的地，仅提供尽力而为的传输服务
       无连接：IP并不维护任何关于后续数据包的状态信息。每个数据包的处理是相互独立的，IP数据包可以不按照发送顺序接收
  IP数据包中含有发送它主机的IP地址（源地址）和接收它主机的IP地址（目的地址）


  TCP协议（传输控制协议）

  TCP是一种面向连接的，可靠的传输层通信协议
  功能：提供不同主机上的进程间通信
  特点：
       1）建立链接->使用链接->释放链接（虚电路）
       2）TCP数据包中包含序号和确认序号
       3）对包进行排序并检错，而损坏的包可以被重传
  服务对象：
       需要高度可靠性且面向连接的服务
       如HTTP、FTP、SMTP等


  UDP协议

  UDP是一种面向无连接的传输层通信协议
  功能：提供不同主机上的进程间通信
  特点：
       1）发送数据包之前不需要建立连接
       2）不对数据包的顺序进行检查
       3）没有错误检测和重传机制
  服务对象：
       主要用于“查询--应答”的服务，如视频通话，语音通话
       如：NFS、NTP、DNS等


  MAC地址、IP地址、netmask、端口

  网卡
  又称为网络适配器或网络接口卡NIC，通俗的叫就是网卡，通过网卡能够使不同的计算机之间连接，从而完成数据通信等功能

  mac地址
  每一个网卡在出厂时，都会分配一个编号，这个编号就称之为mac地址
  MAC地址用于标识网络设备，类似于身份证号，且理论上全球唯一
  组成：以太网内的MAC地址是一个48bit的值，通常人为识别时是通过16进制数来识别的，以两个16进制数为一组，一共分为六
  组，每一组之间通过:隔开，前三组称之为厂商ID，后三组称之为设备ID

  ip地址
  ip地址是一种Internet上的主机编址方式，也成为网际协议地址，IP地址时任意一台主机在网络中的唯一标识，IP地址可以分为
  IPv4和IPv6，IPv4为32bit，IPv6为64bit

    ipv4地址组成
    使用32bit，由（网络ID，主机ID）两部分组成
    子网ID：IP地址中由子网掩码中1覆盖的连续位
    主机ID：IP地址中由子网掩码中0覆盖的连续位

    ip地址特点
    子网ID不同的网络不能直接通信，需要通信则需要路由器转发
    主机ID全为0的IP地址表示网段地址
    主机ID全为1的IP地址表示改网段的广播地址
    对于192.168.1.x网段而言，192.168.1.0标识该网段，192.168.1.255标识广播地址

    ipv4地址分类
    可以分为5类，A类地址、B类地址、C类地址、D类地址和E类地址，其中ABC类地址最常用，D类地址为多播地址，又称组播地址，
    A类网段为010000000-1到011000000，B类为011000000-1到011100000，以此类推，E类为保留地址，网段为011110000-1到011111111

    公有ip地址
    公有IP（可直接连接Internet）：经由InterNIC所统一规划的IP

    私有ip地址
    私有ip地址（又称非法IP）：主要用于局域网内的主机连携规划

    回环IP地址
    通常127.0.0.1被称为回环IP地址，主要是测试本机的网络配置，能ping通127.0.0.1说明本机的ip协议安装都没有问题
    注意：127.0.0.1~127.255.255.254中的任何地址都将回环到本机的主机中，不属于任何一个有类别地址类，它代表设备
    的本地虚拟接口

  子网掩码
  子网掩码（subnet mask）又叫网络掩码、地址掩码，是一个32bit由0和1组成的数值，且0和1分别连续
  作用：指明IP地址中哪些位标识的是主机所在的子网以及哪些位标识的主机号
  特点：必须结合IP地址一起使用，不能单独存在；IP地址张由子网掩码中1覆盖的连续位为子网ID，其余为主机ID
  linux下使用命令配置一般为：ifconfig eth0 10.0.44.102 netmask 255.255.255.0

  端口
  TCP/IP协议采用端口标识通信的进程，用于区分一个系统中的多个进程
  特点：对于同一个端口，在不同系统中对应着不同的进程；对于同一个系统，一个端口之恶能被一个进程拥有；一个进程拥有
  一个端口后传输层送到该端口的数据全部被该进程接收，同样，进程送交传输层的数据也通过该端口被送出

  端口号
  类似pid标识一个进程，在网络程序中，用端口号（port）来标识一个运行的网络程序
  特点：端口号是无符号短整型的类型；每个端口都拥有一个端口号；TCP、UDP维护各自独立的端口号；网络应用程序，至少需
  要占用一个端口号，也可以占用多个端口号
    知名端口号（1-1023）
    由互联网数字分配机构（IANA）根据用户需要进行统一分配，例如：FTP--21，HTTP--80等服务器通常使用的范围，若强制使
    用，需要root权限
    动态端口号（1024-65535）
    应用程序通常使用的范围
    注意：端口号类似于进程号，同一时刻只能标志一个进程，可以重复使用

  数据传输之封包拆包

          +-------------------+                                      +------+    +----+      +------------------+
  应用层  |   发送应用进程    |                                      | Data |    | 包 |      |   接收应用进程   |
          +-------------------+                                      +------+    |    |      +------------------+
  Dst=192.168.3.1:80 |                                                           |    |              |
          +-------------------+                          +-----------+------+    |    |      +------------------+
  传输层  |      TCP/UDP      |                          | TCP/UDP头 | Data |    | 封 |      |     TCP/UDP      |
          +-------------------+                          +-----------+------+    |    |      +------------------+
                     |                                                           |    |              |
          +-------------------+                   +------+-----------+------+    |    |      +------------------+
  网络层  |       IPv4        |                   | IP头 | TCP/UDP头 | Data |    | 装 |      |      IPv4        |
          +-------------------+                   +------+-----------+------+   \|    |/     +------------------+
                     |                                                           \    /              |
          +-------------------+      +------------+------+-----------+------+     \  /       +------------------+
  链路层  |     数据链路      |      | 比特流头部 | IP头 | TCP/UDP头 | Data |      \/        |     数据链路层   |
          +-------------------+      +------------+------+-----------+------+                +------------------+
                     |                                                                               |
 ------------------------------------------------------------------------------------------------------------------------
                                       +------------+--------+-----------+----------+ 
    <----------------------------------| 以太网头部 | IPv4头 | TCP/UDP头 | 用户数据 |---------------------------->
            DstMAC=00:0a:95:b3:7e:b4   +------------+--------+-----------+----------+
                                             |          |          |
                   帧类型       <------------+          V          +--->DstPort=80
                                               DstIP=192.168.3.1

  链路封包格式

                        +---------------------------------------------------------------------------------------------+
  IEEE802.2/802.3封装   | 目的地址 | 源地址 | 长度 | DSAP AA | SSAP AA | Cntl 03 | Org code 00| 类型 |   数据   | CRC |
                        +---------------------------------------------------------------------------------------------+
                             6         6       2        1         1        1           3         2     38~1492     4

                        +---------------------------------------------------------------------------------------------+
           以太网封装   | 目的地址 | 源地址 | 类型 |                        数据                                | CRC |
                        +---------------------------------------------------------------------------------------------+
                             6         6       2                          46~1500                                  4

        数字表示字节数，目的地址为6字节，所以目的地址是目标mac地址，源mac地址是发送数据的主机mac地址，
        类型占两个字节，有0x0800、0x0806和0x0835等，0x0800表示IP数据报，0x0806表示ARP请求/应答，ox0835表示RARP请求/应答
        其中以太网封装一般使用在有线局域网，IEEE802常用在无线
        
  






















