/*
 * author: inkXu
 * date:   2022.10.7
 *
 * 数据包详解
 */

  使用原始套接字进行编程开发时，首先要对不同协议的数据包进行学习，需要手动对IP、TCP、UDP、ICMP等
  包头进行组装或者拆解

  ubuntu中描述网络协议结构的文件路径

    /usr/include/netinet
    /usr/include/net


  在TCP/IP协议栈中的每一层为了能够正确解析出上层的数据包，从而使用一些'协议类型'来标记，详细如下图

       +------------+    +------------+              +--------------+       +--------------+
       | http服务器 |    |    FTP     |              |    飞秋      |       |     TFTP     |
       +------------+    +------------+              +--------------+       +--------------+
              80 \         / 21                               2425 \           / 69
               +-------------+                                    +--------------+
               |    TCP      | <----6----+           +----17----> |     UDP      |
               +-------------+            \         /             +--------------+
                                           \       /
              +-------------+            +-------------+            +-------------+
              |    ICMP     | <----1---- |     IP      | ----2----> |    IGMP     |
              +-------------+            +-------------+            +-------------+
                                         0x0800 |
              +-------------+            +-------------+            +-------------+
              |     ARP     | <-0x0806-- |   以太网    | --0x8035-> |    RARP     |
              +-------------+            +-------------+            +-------------+
                                                |
                                         +-------------+  
                                         |   网卡设备  |    
                                         +-------------+   


  UDP报头

       0                             32bits/4bytes                          31
       +--------------------------------------------------------------------+   \
       |          16位源端口号            |        16位目的端口号           |   |
       |--------------------------------------------------------------------|  8bytes
       |          16位UDP长度             |        16位UDP效验和            |   |
       |--------------------------------------------------------------------|   /
       |                                                                    |
       |                    数据（偶数个字节，不足补0）                     |
       |                                                                    |
       +--------------------------------------------------------------------+

     1) 源端口号：发送方端口号
     2) 目的口号：接收方端口号
     3) 长度：UDP用户数据报的长度，最小值是8（仅有首部），注意，需要包括数据的长度
     4) 效验和：检测UDP用户数据报在传输中是否有错，有错就丢弃


  IP报头

       0                             32bits/4bytes                          31
       +----------------------------------------------------------------------+   \
       | 版本(4位) | 首部长度(4位) | 服务类型(8位) |       总长度(16位)       |   |
       |----------------------------------------------------------------------|   |
       |            标识(16位)                     | 标志(3位) | 片偏移(13位) |   |
       |----------------------------------------------------------------------|   |
       |     生存时间TTL(8位) | 协议类型(8位)      |    头部效验和(16位)      | 20bytes
       |----------------------------------------------------------------------|   |
       |                             源IP地址(32位)                           |   |
       |----------------------------------------------------------------------|   |
       |                             目地IP地址(32位)                         |   |
       |----------------------------------------------------------------------|   /
       |                                选项(32位)                            |
       |----------------------------------------------------------------------|
       |                                                                      |
       |                                 数据                                 |
       |                                                                      |
       +----------------------------------------------------------------------+

     1) 版本：IP协议的版本。通信双方使用的IP协议的版本必须一致，目前最广泛使用的协议版本号为4(IPv4)
     2) 首部长度：单位是32位(4字节)，所以传入的值为5，5个4字节
     3) 服务类型：一般不适用，取值位0.前3位：优先级，第4-7位：延时，吞吐量，可靠性，花费。第8位保留
     4) 总长度：指首部加上数据的总长度，单位为字节。最大长度为65535字节。
        注意，IP协议中数据的长度包括传输层的协议UDP/TCP头的长度，和UDP/TCP数据的长度，所以填写IP总
        长度时，要根据所选协议设置长度。
     5) 标识(identification)：用来标识主机发送的每一份数据报。IP软件在存储器中维持一个计数器，每产生
        一个数据报，计数器就加1，并将此值赋给标识字段。
     6) 标志(flag)：目前只有两位有意义。
        标志字段中的最低位记为MF。MF=1即表示后面'还有分片'的数据报。MF=0表示这已是若干数据报片中的最
        后一个。
        标志字段中间的一位记为DF，意思是'不能分片'，只有当DF=0时才允许分片
     7) 片偏移：指出较长的分组在分片后，某片在源分组中的相对位置，也就是说，相对于用户数据段的起点，
        该片从何处开始。片偏移以8字节为偏移单位。
     8) 生存时间：TTL，表明是数据报在网络中的寿命，即为'跳数限制'，由发出数据报的源点设置这个字段。
        路由器在转发数据之前就把TTL值减一，当TTL值减为0时，就对齐这个数据报。通常设置为32、64、128。
     9) 协议：指出此数据报携带的数据时使用何种协议，以便使目的主机的IP层知道应将数据部分上交给哪个
        处理过程，常用的ICMP(1), IGMP(2), TCP(6), UDP(17), IPv6(41)
     10) 首部效验和：只效验数据报的首部，不包括数据部分。
     11) 源地址：发送方IP地址
     12) 目的地址：接收方IP地址
     13) 选项：用来定义一些任选项；如记录路径、时间戳等。这些选项很少被人使用，同时并不是所有主机
         和路由器都支持这些选项，一般忽略不计。



  Ethernet封包格式

  IEEE802.2/802.3封包(WLAN使用，无线网)

    |        802.3 MAC         |        802.2 LLC         |     802.2 SNAP      |
    +----------------------------------------------------------------------------------------+
    | 目的地址 | 源地址 | 长度 | DSAP AA | SSAP AA | Cntl | Org ccode 00 | 类型 | 数据 | CRC |
    +----------------------------------------------------------------------------------------+
         6         6       2        1         1        1          3          2   38-1492   4
                                                                         +-------------+
                                                                         | 0800 | IP   |
                                                                         +-------------+
                                                                         +-------------+
                                                                         | 0806 | ARP  |
                                                                         +-------------+
                                                                         +-------------+
                                                                         | 8035 | RARP |
                                                                         +-------------+

         以太网封装(RFC894)(LAN使用，有线网)
    +----------------------------------------------------------------------------------------+
    | 目的地址 | 源地址 | 类型 |                      数据                             | CRC |
    +----------------------------------------------------------------------------------------+
         6         6       2                        46-1500                               4
                        +--------------------------------------------------------------+
                        |0x0800|                IP数据报(46-1500)                      |
                        +--------------------------------------------------------------+
                        +---------------------------------------------------+
                        |0x0806|          ARP数据报(28)              | PAD  |
                        +---------------------------------------------------+
                        +---------------------------------------------------+
                        |0x8035|          RARP数据报(28)             | PAD  |
                        +---------------------------------------------------+
                           2                    28                     18
   1 目的地址：目的mac地址
   2 源地址：源mac地址
   3 类型：ip数据报(0x0800) ARP数据报(0x0806) RARP数据报(0x8035)
   4 数据：数据根据类型来决定

   1) CRC、PAD在组包时可以忽略
   2) FCS
   CRC即循环冗余效验码：是数据通信领域中最常用的一种差错效验码，其特征是信息字段和效验字段的长度可以
   任意选定。循环冗余检查是一种数据传输检错功能，对数据进行h多项式计算，并将得到的结果附在帧的后面，
   接收设备也执行类似的算法，以保证数据传输的正确性和完整性。



  TCP报头

       0                             32bits/4bytes                          31
       +----------------------------------------------------------------------+   \
       |           源端口号(16位)         |          目的端口号(16位)         |   |
       |----------------------------------------------------------------------|   |
       |                              序列号(32位)                            |   |
       |----------------------------------------------------------------------|   |
       |                              确认号(32位)                            |   |
       |----------------------------------------------------------------------| 20bytes
       | 头部长 | 保留 |UR|AC|PS|RS|SY|FIN|            窗口尺寸               |   |
       | 度(4位)| (6位)|G |K |H |T |N |   |            (16位)                 |   |
       |----------------------------------------------------------------------|   |
       |         TCP效验和(16位)          |          紧急指针(16位)           |   |
       |----------------------------------------------------------------------|   /
       |                                选项(32位)                            |
       |----------------------------------------------------------------------|
       |                                                                      |
       |                                 数据                                 |
       |                                                                      |
       +----------------------------------------------------------------------+

    1) 源端口号：发送方端口号
    2) 目的端口号：接收方端口号
    3) 序列号：本报文段的数据的第一个字节的序号
    4) 确认序号：期望收到对方下一个报文段的第一个数据字节的序号
    5) 首部长度(数据偏移)：TCP报文段的数据起始处距离TCP报文段的起始处有多远，即首部长度。单位
       32位，即以4字节为计算单位。
    6) 保留：占6位，保留位今后使用，目前应置为0
    7) 紧急URG：此位置1，表明紧急指针字段有效，它告诉系统此报文段中有紧急数据，应尽快传送
    8) 确认ACK：仅当ACK=1时确认号字段才有效，TCP规定，在连接建立后所有传达的报文段都必须把ACK置1
    9) 推送PSH：当两个应用进程进行交互式的通信时，有时在一端的应用进程希望在键入一个命令后立即就能
       够接收到对方的响应。在这种情况下，TCP就可以使用推送(push)操作，这时，发送方TCP把PSH置为1，
       并立即创建一个报文段发送出去，接收方收到PSH=1的报文段，就尽快地(即"推送"向前)交付给接收应用
       进程，而不再等到整个缓存都填满后再向上交付
    10) 复位RST：用于复位相应的tCP连接
    11) 同步SYN：仅在三次握手建立TCP连接时有效。当SYN=1而ACK=0时，表明这是一个连接请求报文段，对方
        若同意建立连接，则应再相应的报文段中使用SYN=1和ACK=1。因此，SYN置1就表示这是一个连接请求或
        连接接收报文
    12) 终止FIN：用来释放一个连接。当FIN=1时，表明此报文段的发送方的数据已经发送完毕，并要求释放运
        输连接。
    13) 窗口：指发送本报文段的一方的接收窗口(而不是自己的发送窗口)
    14) 效验和：效验和字段检验的范围包括首部和数据两部分，在计算效验和时需要加上12字节的伪头部
    15) 紧急指针：仅在URG=1时才有意义，它指出本报文段中的紧急数据的字节数(紧急数据结束后就是普通数
        据)，即指出了紧急数据的末尾在报文中的位置，注意：即使窗口为0时也可发送紧急数据
    16) 选项：长度可变，最长可达40字节，当没有使用选项时，TCP首部长度是20字节



  ICMP封包格式

                                     32bits/4bytes
       0               7 8              15 16                               31
       +--------------------------------------------------------------------+
       |    类型(8位)   |   代码(8位)     |        效验和(16位)             |
       |--------------------------------------------------------------------|
       |         标示位(16位)             |          序号(16位)             |
       |--------------------------------------------------------------------|
       |                                                                    |
       |                             选项数据                               |
       |                                                                    |
       +--------------------------------------------------------------------+
                             ICMP回显请求和回显应答格式

       +----------------------------------+
       | 类型 | 代码 |       描述         |
       |----------------------------------|
       |  0   |  0   |      回显应答      |
       |----------------------------------|
       |  8   |  0   |      回显请求      |
       +----------------------------------+

    注意：不同的类型值以及代码值，代表不同的功能



  ARP头部

                      硬件地址长度 <---| |---->协议地址长度
    +-------------------------------------------------------------------------------------------+
    | Dest | Src | 帧   | 硬件 | 协议 | | |  OP  |  发送端    | 发送端 | 目的以太网 |  目的IP   |
    | MAC  | MAC | 类型 | 类型 | 类型 | | | code | 以太网地址 | IP地址 |    地址    |   地址    |
    +-------------------------------------------------------------------------------------------+
       6      6      2     2       2   1 1   2         6          4          6           4
    |<----以太网首部--->|<------------------------28字节ARP请求/应答--------------------------->|

   1) Dest MAC: 目的MAC地址
   2) Src MAC: 源MAC地址
   3) 帧类型: 0x0806
   4) 硬件类型: 1(以太网)
   5) 协议类型: 0x0800(IP地址)
   6) 硬件地址长度: 6
   7) 协议地址长度: 4
   8) OP: 1(ARP请求)   2(ARP应答)   3(RARP请求)    4(RARP应答)



  ARP数据解析图(cisco抓包)

  Ethernet

     0                      7 8               13 14                 19 Bytes
     +---------------------------------------------------------------+
     |        PREAMBLE       |     DEST MAC     |     SRC MAC        |
     |---------------------------------------------------------------|
     |    TYPE    |           DATA (VARIABLE LENGTH)       |   FCS   |
     +---------------------------------------------------------------+

  ARP

     0                            16                                 31 Bits
     +---------------------------------------------------------------+
     |        HARDWARE TYPE        |        PROTOCOL TYPE            |
     |---------------------------------------------------------------|
     |    HLEN     |    PLEN       |            OPCODE               |
     |---------------------------------------------------------------|
     |                        SOURECE MAC(48bits)                    |
     |                             ----------------------------------|
     |    0090.0CED.B2DE           |        SOURCE IP(32bits)        
     |---------------------------------------------------------------|
            192.168.3.201          |        TARGET MAC(48bits)       |
     |------------------------------                                 |
     |                        340E.4AB2.ECB8                         |
     |---------------------------------------------------------------|
     |              TRAGET IP(32 bits) 192.168.3.77                  |
     +---------------------------------------------------------------+

   OPCODE: 1: arp请求  2: arp应答  1: rarp请求  1: rarp应答
   1) ARP的TYPE为0x0806
   2) 整个包都是unsigned char类型，若是没有加unsigned将不是理想结果
   3) 所有数据均为大端






