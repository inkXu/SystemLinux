/*
 * author: inkXu
 * date:   2022.8.25
 *
 * 文件描述符
 */

  概述

  文件描述符是非负整数，是文件的标识

  用户使用文件描述符来访问文件

  使用open开启一个文件时，内核会返回一个文件的描述符

  每个进程都有一张文件描述符表，这张表在PCB（进程控制块）中，在进程创建时，标准输入、输出和错误这三个输出
  设备文件被打开，对应的文件描述符为0、1、2记录在表中

  在进程中打开其它文件时，系统会返回文件描述符表最小可用的文件描述符，并将此文件描述符记录在表中。一个Linux
  进程中最多同时打开NR_OPEN_DEFAULT(即1024)个文件，故若是不使用该文件了，调用close关闭该文件，空出文件描述符


	int
	main(int argc, char *argv[])
	{
	     /* 关闭标准输入的文件描述符 */
	     close(0);

	     /* fd = 0，因为返回文件描述符为最小可用的，上面关闭了标准输入，所以这里fd的描述符是0 */
	     int fd = open("./file.txt", O_CREAT | O_TRUNC | O_RDWR, 0664);

	     return 0;
	}

	int
	main(int argc, char *argv[])
	{
	     /* 开启了1024个文件后会打印错误：开启过多的文件 */
	     int fd = 0;
	     while(1) {
	       if ((fd = open("./file.txt", O_CREAT | O_TRUNC | O_RDWR, 0664)) == -1) {
	         perror("open");
	         exit(EXIT_FAILURE);
	       }
	       /* 输出fd到1023，从0开始到1023，共开启了1024个文件 */
	       printf("fd = %d\n", fd);
	     }

	     return 0;
	}
